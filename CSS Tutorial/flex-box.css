.container {
  height: 110px;
  width: 400px;
  border: 5px dashed black;
  /* border has 3 variant : solid, dotted, dashed */
  background-color: #ff2;
}

.box {
  height: 100px;
  width: 100px;
  margin: 5px;
}

#box1 {
  background-color: springgreen;
  float: right; /* Float property left, right amd none*/
  text-align: center;
}
#box2 {
  background-color: darksalmon;
  float: left;
  text-align: center;
}

/* Flexbox is 1D layout method for arranging items in a row or columns means set in horizontal or vertical manner */
/* Flexbox direction : The property used to define the direction in a flex container like row layout, column layout, reverse direction */

.boxx {
  height: 150px;
  width: 150px;
  margin-right: 5px;
  border: 3px solid black;
}

#heading {
  margin-left: 200px;
}

#container2 {
  text-align: center;
  height: 400px;
  width: 620px;
  padding: 10px;
  margin: 20px;
  border: 3px solid black;
  background-color: lavender;

  display: flex;
  flex-direction: row;

  /* Flex container (Justify content)
flex-start, flex-end, center, space-between, space-around, space-evenly */

  /* if you want to set the item in 
  main axis then use  justify-content
  cross axis then use align-items */

  justify-content: center;

  /* flex-wrap has 3 values : wrap, wrap-reverse, nowrap */
  /* flex-wrap: wrap; */

  /* align-items property : start, end, center*/
  align-items: center;

  /* align-content: start; */
}

#box3 {
  background-color: tomato;
order: 2;
}
#box4 {
  background-color: mediumpurple;
order: 1;
  /* align-self: flex-end; */
}
#box5 {
  background-color: khaki;
  flex-shrink:5;
  order: 3; 
}
#box6 {
  background-color: salmon;
flex-grow: 6;
order: 4;
}